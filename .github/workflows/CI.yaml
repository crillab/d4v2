name: CI

on:
  - workflow_dispatch
  - push

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
        compiler:
          - cc: gcc
            cxx: g++
          - cc: clang
            cxx: clang++
        launcher:
          - sccache
        shell:
          - bash
        binary:
          - d4
        include:
          - os: windows
            compiler: { cc: gcc, cxx: g++ }
            launcher: ''
            shell: msys2
            binary: d4.exe
            msystem: ucrt64
#          - os: windows
#            compiler: { cc: clang, cxx: clang++ }
#            launcher: ''
#            shell: msys2
#            binary: d4.exe
#            msystem: clang64
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: ${{ matrix.shell }} {0}
    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
      CMAKE_C_COMPILER_LAUNCHER: ${{ matrix.launcher }}
      CMAKE_CXX_COMPILER_LAUNCHER: ${{ matrix.launcher }}
      SCCACHE_GHA_ENABLED: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Install dependencies
        if: ${{ matrix.os == 'ubuntu' }}
        run: sudo apt install ninja-build libtbb-dev libhwloc-dev libboost-program-options-dev
      - name: Install dependencies
        if: ${{ matrix.os == 'windows' }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          pacboy: >-
            toolchain:p
            cmake:p
            ninja:p
            gmp:p
            tbb:p
            hwloc:p
            boost:p
      - name: Setup dependencies
        if: ${{ matrix.os == 'windows' }}
        run: mv /${{ matrix.msystem }}/lib/libtbb12.dll.a /${{ matrix.msystem }}/lib/libtbb.dll.a
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.3
      - name: Configure
        run: cmake -DBUILD_SHARED_LIBS=true -B build -G Ninja
      - name: Build
        run: cmake --build build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: d4-${{ matrix.os }}-${{ matrix.compiler.cc }}
          path: build/${{ matrix.binary }}
